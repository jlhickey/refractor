## Code Refractor

## User Story 
This is a short, simple description of a feature told from the perspective of the person who is requesting the new capability, 
usually a user or customer of the system. This follows an AS AN / I WANT / SO THAT format. For example, "AS A shopper visiting an online store, 
I WANT to place items in a shopping cart, SO THAT I can purchase them."

## Acceptance Criteria These are the requirements that you must meet to satisfy the scope of work. 
They are not exhaustive, but they do entail the minimum aspects of a working solution. Consider this a checklist of baseline requirements. 
Acceptance criteria can be presented in various ways. In this case, we’ll use a common format called scenario-oriented criteria which expresses 
each requirement in a WHEN / THEN format. Don’t worry if this doesn’t make sense now; it will become very familiar to you after you complete a 
couple of challenges.

## Mock-up
This is an image or animation that demonstrates the design and functionality of the web application that you'll build for the Challenge.


One of the most common tasks for front-end and junior developers is to take existing code and refactor it 
(recall that to refactor code is to improve it without changing what it does) to meet a certain set of standards or implement 
a new technology. In this Challenge, a marketing agency has hired you to refactor an existing site to make it more accessible.

MY REPOSITORIES
[My Employee-Tracker Project: https://github.com/jlhickey/Refractor]
[MyGitHub: https://github.com/jlhickey]
